"e0bce4fa726bfb42dfd724f73d2e888581b2fa24"
#s(undo-tree [nil ([nil ([nil ([nil (#2=[nil nil ((1782 . 1783) (t 24452 4211 480438 649000)) nil (24452 4215 460302 675000) 0 nil]) ((nil rear-nonsticky nil 1312 . 1313) (#("
" 0 1 (fontified nil)) . -1759) (1308 . 1760) 1301) nil (24452 4211 458381 7000) 0 nil]) ((#("    x = np.linspace(0,1,100)
    plt.plot(x, basis_1.basis_functions[0](x), label='B_0^4')
    plt.plot(x, basis_1.basis_functions[1](x), label='B_1^4')
    plt.plot(x, basis_1.basis_functions[2](x), label='B_2^4')
    plt.plot(x, basis_1.basis_functions[3](x), label='B_3^4')
    plt.plot(x, basis_1.basis_functions[4](x), label='B_4^4')
    plt.title(\"Bernstein Functions of Degree 4\", fontsize=14)
    plt.legend(loc = 'upper left')
    plt.show()
" 0 4 (fontified t) 4 5 (fontified t face font-lock-variable-name-face) 5 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 21 (fontified t face highlight-numbers-number) 21 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t) 24 27 (fontified t face highlight-numbers-number) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 29 (fontified t) 29 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-1-face)) 42 68 (fontified t) 68 69 (fontified t face (rainbow-delimiters-depth-2-face)) 69 70 (fontified t face highlight-numbers-number) 70 71 (fontified t face (rainbow-delimiters-depth-2-face)) 71 72 (fontified t face (rainbow-delimiters-depth-2-face)) 72 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-2-face)) 74 82 (fontified t) 82 83 (syntax-table #1=(15) fontified t face font-lock-string-face) 83 88 (fontified t face font-lock-string-face) 88 89 (syntax-table #1# fontified t face font-lock-string-face) 89 90 (fontified t face (rainbow-delimiters-depth-1-face)) 90 103 (fontified t) 103 104 (fontified t face (rainbow-delimiters-depth-1-face)) 104 130 (fontified t) 130 131 (fontified t face (rainbow-delimiters-depth-2-face)) 131 132 (fontified t face highlight-numbers-number) 132 133 (fontified t face (rainbow-delimiters-depth-2-face)) 133 134 (fontified t face (rainbow-delimiters-depth-2-face)) 134 135 (fontified t) 135 136 (fontified t face (rainbow-delimiters-depth-2-face)) 136 144 (fontified t) 144 145 (syntax-table #1# fontified t face font-lock-string-face) 145 150 (fontified t face font-lock-string-face) 150 151 (syntax-table #1# fontified t face font-lock-string-face) 151 152 (fontified t face (rainbow-delimiters-depth-1-face)) 152 165 (fontified t) 165 166 (fontified t face (rainbow-delimiters-depth-1-face)) 166 192 (fontified t) 192 193 (fontified t face (rainbow-delimiters-depth-2-face)) 193 194 (fontified t face highlight-numbers-number) 194 195 (fontified t face (rainbow-delimiters-depth-2-face)) 195 196 (fontified t face (rainbow-delimiters-depth-2-face)) 196 197 (fontified t) 197 198 (fontified t face (rainbow-delimiters-depth-2-face)) 198 200 (fontified t) 200 206 (fontified t) 206 207 (syntax-table #1# fontified t face font-lock-string-face) 207 212 (fontified t face font-lock-string-face) 212 213 (syntax-table #1# fontified t face font-lock-string-face) 213 214 (fontified t face (rainbow-delimiters-depth-1-face)) 214 227 (fontified t) 227 228 (fontified t face (rainbow-delimiters-depth-1-face)) 228 254 (fontified t) 254 255 (fontified t face (rainbow-delimiters-depth-2-face)) 255 256 (fontified t face highlight-numbers-number) 256 257 (fontified t face (rainbow-delimiters-depth-2-face)) 257 258 (fontified t face (rainbow-delimiters-depth-2-face)) 258 259 (fontified t) 259 260 (fontified t face (rainbow-delimiters-depth-2-face)) 260 268 (fontified t) 268 269 (syntax-table #1# fontified t face font-lock-string-face) 269 274 (fontified t face font-lock-string-face) 274 275 (syntax-table #1# fontified t face font-lock-string-face) 275 276 (fontified t face (rainbow-delimiters-depth-1-face)) 276 289 (fontified t) 289 290 (fontified t face (rainbow-delimiters-depth-1-face)) 290 316 (fontified t) 316 317 (fontified t face (rainbow-delimiters-depth-2-face)) 317 318 (fontified t face highlight-numbers-number) 318 319 (fontified t face (rainbow-delimiters-depth-2-face)) 319 320 (fontified t face (rainbow-delimiters-depth-2-face)) 320 321 (fontified t) 321 322 (fontified t face (rainbow-delimiters-depth-2-face)) 322 330 (fontified t) 330 331 (syntax-table #1# fontified t face font-lock-string-face) 331 336 (fontified t face font-lock-string-face) 336 337 (syntax-table #1# fontified t face font-lock-string-face) 337 338 (fontified t face (rainbow-delimiters-depth-1-face)) 338 352 (fontified t) 352 353 (fontified t face (rainbow-delimiters-depth-1-face)) 353 354 (syntax-table #1# fontified t face font-lock-string-face) 354 385 (fontified t face font-lock-string-face) 385 386 (syntax-table #1# fontified t face font-lock-string-face) 386 397 (fontified t) 397 399 (fontified t face highlight-numbers-number) 399 400 (fontified t face (rainbow-delimiters-depth-1-face)) 400 415 (fontified t) 415 416 (fontified t face (rainbow-delimiters-depth-1-face)) 416 422 (fontified t) 422 423 (syntax-table #1# fontified t face font-lock-string-face) 423 433 (fontified t face font-lock-string-face) 433 434 (syntax-table #1# fontified t face font-lock-string-face) 434 435 (fontified t face (rainbow-delimiters-depth-1-face)) 435 448 (fontified t) 448 449 (fontified t face (rainbow-delimiters-depth-1-face)) 449 450 (fontified t face (rainbow-delimiters-depth-1-face)) 450 451 (fontified t)) . 1318) (undo-tree-id83 . -21) (undo-tree-id84 . -21) (undo-tree-id85 . -440) (undo-tree-id86 . -4) (undo-tree-id87 . -440) (undo-tree-id88 . -450) (undo-tree-id89 . -440) (undo-tree-id90 . -436) (undo-tree-id91 . -451) (undo-tree-id92 . -21) (undo-tree-id93 . -50) (undo-tree-id94 . -112) (undo-tree-id95 . -50) (undo-tree-id96 . -50) (undo-tree-id97 . -112) (undo-tree-id98 . -21) (undo-tree-id99 . -50) (undo-tree-id100 . -21) (undo-tree-id101 . -33) (undo-tree-id102 . -33) (undo-tree-id103 . -95) (undo-tree-id104 . -95) (undo-tree-id105 . -157) (undo-tree-id106 . -157) (undo-tree-id107 . -219) (undo-tree-id108 . -219) (undo-tree-id109 . -281) (undo-tree-id110 . -281) (undo-tree-id111 . -343) (undo-tree-id112 . -343) (undo-tree-id113 . -405) (undo-tree-id114 . -405) (undo-tree-id115 . -28) (undo-tree-id116 . -90) (undo-tree-id117 . -152) (undo-tree-id118 . -214) (undo-tree-id119 . -276) (undo-tree-id120 . -338) (undo-tree-id121 . -400) (undo-tree-id122 . -435) (undo-tree-id123 . -450) (undo-tree-id124 . -28) (undo-tree-id125 . -90) (undo-tree-id126 . -152) (undo-tree-id127 . -214) (undo-tree-id128 . -276) (undo-tree-id129 . -338) (undo-tree-id130 . -400) (undo-tree-id131 . -435) (undo-tree-id132 . -450) (undo-tree-id133 . -28) (undo-tree-id134 . -90) (undo-tree-id135 . -152) (undo-tree-id136 . -214) (undo-tree-id137 . -276) (undo-tree-id138 . -338) (undo-tree-id139 . -400) (undo-tree-id140 . -435) (undo-tree-id141 . -450) (undo-tree-id142 . -28) (undo-tree-id143 . -90) (undo-tree-id144 . -152) (undo-tree-id145 . -214) (undo-tree-id146 . -276) (undo-tree-id147 . -338) (undo-tree-id148 . -400) (undo-tree-id149 . -435) (undo-tree-id150 . -450) (undo-tree-id151 . -28) (undo-tree-id152 . -90) (undo-tree-id153 . -152) (undo-tree-id154 . -214) (undo-tree-id155 . -276) (undo-tree-id156 . -338) (undo-tree-id157 . -400) (undo-tree-id158 . -435) (undo-tree-id159 . -450) (undo-tree-id160 . -28) (undo-tree-id161 . -90) (undo-tree-id162 . -152) (undo-tree-id163 . -214) (undo-tree-id164 . -276) (undo-tree-id165 . -338) (undo-tree-id166 . -400) (undo-tree-id167 . -435) (undo-tree-id168 . -450) (undo-tree-id169 . -28) (undo-tree-id170 . -90) (undo-tree-id171 . -152) (undo-tree-id172 . -214) (undo-tree-id173 . -276) (undo-tree-id174 . -338) (undo-tree-id175 . -400) (undo-tree-id176 . -435) (undo-tree-id177 . -450) (undo-tree-id178 . -4) (undo-tree-id179 . -451) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -440) (undo-tree-id184 . -33) (undo-tree-id185 . -4) (undo-tree-id186 . -95) (undo-tree-id187 . -33) (undo-tree-id188 . -157) (undo-tree-id189 . -95) (undo-tree-id190 . -219) (undo-tree-id191 . -157) (undo-tree-id192 . -281) (undo-tree-id193 . -219) (undo-tree-id194 . -343) (undo-tree-id195 . -281) (undo-tree-id196 . -405) (undo-tree-id197 . -343) (undo-tree-id198 . -440) (undo-tree-id199 . -405) (undo-tree-id200 . -33) (undo-tree-id201 . -33) (undo-tree-id202 . -95) (undo-tree-id203 . -95) (undo-tree-id204 . -157) (undo-tree-id205 . -157) (undo-tree-id206 . -219) (undo-tree-id207 . -219) (undo-tree-id208 . -281) (undo-tree-id209 . -281) (undo-tree-id210 . -343) (undo-tree-id211 . -343) (undo-tree-id212 . -405) (undo-tree-id213 . -405) 1758) nil (24452 4211 458832 893000) 0 nil]) ((1309 . 1314) (#("    " 0 4 (fontified t face font-lock-string-face)) . 1309) (undo-tree-id214 . -4) (undo-tree-id215 . -4) 1313 (1308 . 1313) (1305 . 1311) (#("'''" 0 1 (fontified nil face font-lock-string-face syntax-table #1#) 1 2 (fontified nil face font-lock-string-face) 2 3 (face font-lock-string-face fontified nil)) . -1305) (undo-tree-id216 . -2) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -1) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -1) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -3) (undo-tree-id228 . -2) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (1307 . 1308) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 1307) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (1306 . 1307) (1305 . 1307) (#("'" 0 1 (fontified nil syntax-table #1#)) . -1305) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (1305 . 1306) (1300 . 1305) (t 24452 2099 690100 786000) 1271) nil (24452 4211 458994 286000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((1838 . 1844) (t 24452 2035 11918 2000)) ((#(", 2, 6" 0 2 (fontified t) 2 3 (fontified t face highlight-numbers-number) 3 5 (fontified t) 5 6 (fontified t face highlight-numbers-number)) . 1838) (undo-tree-id20 . -1) (undo-tree-id21 . -2) (undo-tree-id22 . -1) (undo-tree-id23 . -3) (undo-tree-id24 . -2) (undo-tree-id25 . -4) (undo-tree-id26 . -3) (undo-tree-id27 . -5) (undo-tree-id28 . -4) (undo-tree-id29 . -6) (undo-tree-id30 . -5) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (t 24452 2042 827680 556000)) (24452 2042 813383 679000) 0 nil]) ((1321 . 1322) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1321) (undo-tree-id18 . -1) 1322 (t 24452 2031 160036 920000)) ((1321 . 1322) (#("6" 0 1 (fontified t face highlight-numbers-number)) . 1321)) (24452 2093 87676 568000) 0 nil]) ((1310 . 1311) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1310) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1311 (t 24452 2022 924295 400000)) ((1310 . 1311) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 1310)) (24452 2093 853377 821000) 0 nil]) ((1316 . 1322) (1311 . 1316) (1305 . 1311) (1300 . 1305) (t 24452 1980 969704 994000) 1273) ((#("
    " 0 1 (fontified t face font-lock-comment-face) 1 5 (fontified nil)) . 1300) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -1) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -1) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (#("le = 0" 0 2 (fontified nil face font-lock-variable-name-face) 2 5 (fontified nil) 5 6 (fontified nil face highlight-numbers-number)) . 1305) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -5) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -5) (undo-tree-id67 . -6) (#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 1311) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -1) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (#("re = 1" 0 2 (fontified t face font-lock-variable-name-face) 2 5 (fontified t) 5 6 (fontified t face highlight-numbers-number)) . 1316) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -6) (undo-tree-id80 . -5) (undo-tree-id81 . -6) (undo-tree-id82 . -5)) (24452 2094 585895 637000) 0 nil]) ((1324 . 1326) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -1324) (undo-tree-id9 . -1) (undo-tree-id11 . -1) 1325 (t 24452 1978 601789 350000)) ((1324 . 1325) (#("re" 0 2 (fontified t)) . 1324)) (24452 2095 24202 368000) 0 nil]) ((1321 . 1323) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1321) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id7 . -1) 1322 (t 24448 41068 447209 332000)) ((1321 . 1322) (#("le" 0 2 (fontified t)) . 1321)) (24452 2096 111208 559000) 0 nil]) nil nil (24452 2097 85044 632000) 0 nil] #2# 2795 10 nil)