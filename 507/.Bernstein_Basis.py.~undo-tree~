"35f428f278080d2f30230938d193ba6b0f03164d"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((8671 . 8676) (8670 . 8672) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -8670) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (8667 . 8671) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -8667) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -8668) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -8669) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("-" 0 1 (fontified t face font-lock-comment-face)) . -8670) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -8671) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -8672) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -8673) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) 8674 (t 24489 36280 674317 491000)) nil (24489 36292 691969 274000) 0 nil]) ((8685 . 8686)) nil (24489 36280 658985 327000) 0 nil]) ((8686 . 8691) (8685 . 8687) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -8685) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (8683 . 8686) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -8683) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -8684) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 8685 (t 24489 36149 278311 840000)) nil (24489 36280 659123 319000) 0 nil]) ((1569 . 1570) (1568 . 1570) (#("(" 0 1 (fontified nil)) . -1568) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (1561 . 1569)) nil (24489 36149 257453 541000) 0 nil]) ((#("        np.array([[1, 0, 0, 0],
                             [0, 1, 0, 0],
                             [0, 0, 0, 1],
                             [0, 0, 0, 1]])
" 0 8 (fontified t) 8 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t face (rainbow-delimiters-depth-2-face)) 18 19 (fontified t face (rainbow-delimiters-depth-3-face)) 19 20 (fontified t face highlight-numbers-number) 20 22 (fontified t) 22 23 (fontified t face highlight-numbers-number) 23 25 (fontified t) 25 26 (fontified t face highlight-numbers-number) 26 28 (fontified t) 28 29 (fontified t face highlight-numbers-number) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 32 (fontified t) 32 61 (fontified t) 61 62 (fontified t face (rainbow-delimiters-depth-3-face)) 62 63 (fontified t face highlight-numbers-number) 63 65 (fontified t) 65 66 (fontified t face highlight-numbers-number) 66 68 (fontified t) 68 69 (fontified t face highlight-numbers-number) 69 71 (fontified t) 71 72 (fontified t face highlight-numbers-number) 72 73 (fontified t face (rainbow-delimiters-depth-3-face)) 73 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-3-face)) 105 106 (fontified t face highlight-numbers-number) 106 108 (fontified t) 108 109 (fontified t face highlight-numbers-number) 109 111 (fontified t) 111 112 (fontified t face highlight-numbers-number) 112 114 (fontified t) 114 115 (fontified t face highlight-numbers-number) 115 116 (fontified t face (rainbow-delimiters-depth-3-face)) 116 147 (fontified t) 147 148 (fontified t face (rainbow-delimiters-depth-3-face)) 148 149 (fontified t face highlight-numbers-number) 149 151 (fontified t) 151 152 (fontified t face highlight-numbers-number) 152 154 (fontified t) 154 155 (fontified t face highlight-numbers-number) 155 157 (fontified t) 157 158 (fontified t face highlight-numbers-number) 158 159 (fontified t face (rainbow-delimiters-depth-3-face)) 159 160 (fontified t face (rainbow-delimiters-depth-2-face)) 160 161 (fontified t face (rainbow-delimiters-depth-1-face)) 161 162 (fontified t)) . 1562) (undo-tree-id267 . -118) (undo-tree-id268 . -162) (undo-tree-id269 . -126) (undo-tree-id270 . 154) (undo-tree-id271 . -8) (undo-tree-id272 . -126) (undo-tree-id273 . -126) (undo-tree-id274 . -40) (undo-tree-id275 . -40) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -162) (undo-tree-id283 . -8) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -126) (undo-tree-id287 . -40) (undo-tree-id288 . -8) (undo-tree-id289 . 145) (undo-tree-id290 . -18) (undo-tree-id291 . 3) (undo-tree-id292 . -160) (undo-tree-id293 . 146) (undo-tree-id294 . -17) (undo-tree-id295 . 2) (undo-tree-id296 . -161) (undo-tree-id297 . -83) (undo-tree-id298 . -40) (undo-tree-id299 . -126) (undo-tree-id300 . -83) 1688) nil (24489 36149 257623 584000) 0 nil]) ((1562 . 1570) (#(" " 0 1 (fontified nil)) . 1562) (undo-tree-id301 . -1) (1561 . 1562) (t 24489 36131 618541 483000)) nil (24489 36149 257653 939000) 0 nil]) ((#("                             
" 0 29 (fontified t) 29 30 (fontified t)) . 969) (undo-tree-id170 . -30) (undo-tree-id171 . -29) (undo-tree-id172 . 1) (undo-tree-id173 . -29) (undo-tree-id174 . -29) (undo-tree-id175 . -29) (undo-tree-id176 . -29) (undo-tree-id177 . -29) (undo-tree-id178 . -29) (undo-tree-id179 . -29) (undo-tree-id180 . -29) (undo-tree-id181 . -29) (undo-tree-id182 . -29) (undo-tree-id183 . -29) (undo-tree-id184 . -29) (undo-tree-id185 . -29) (undo-tree-id186 . -29) (undo-tree-id187 . -29) (undo-tree-id188 . -29) (undo-tree-id189 . -29) (undo-tree-id190 . -29) (undo-tree-id191 . -29) (undo-tree-id192 . -29) (undo-tree-id193 . -29) (undo-tree-id194 . -29) (undo-tree-id195 . -29) (undo-tree-id196 . -29) (undo-tree-id197 . -29) (undo-tree-id198 . -29) (undo-tree-id199 . -29) (undo-tree-id200 . -29) (undo-tree-id201 . -29) (undo-tree-id202 . -29) (undo-tree-id203 . -29) (undo-tree-id204 . -29) (undo-tree-id205 . -29) (undo-tree-id206 . -29) (undo-tree-id207 . -29) (undo-tree-id208 . -29) (undo-tree-id209 . -29) (undo-tree-id210 . -29) (undo-tree-id211 . -29) (undo-tree-id212 . -29) (undo-tree-id213 . -29) (undo-tree-id214 . -29) (undo-tree-id215 . -29) (undo-tree-id216 . -29) (undo-tree-id217 . -29) (undo-tree-id218 . -29) (undo-tree-id219 . -29) (undo-tree-id220 . -29) (undo-tree-id221 . -29) (undo-tree-id222 . -29) (undo-tree-id223 . -29) (undo-tree-id224 . -29) (undo-tree-id225 . -29) (undo-tree-id226 . -29) (undo-tree-id227 . -29) (undo-tree-id228 . -29) (undo-tree-id229 . -29) (undo-tree-id230 . -29) (undo-tree-id231 . -29) (undo-tree-id232 . -29) (undo-tree-id233 . -29) (undo-tree-id234 . -29) (undo-tree-id235 . -29) (undo-tree-id236 . -29) (undo-tree-id237 . -29) (undo-tree-id238 . -29) (undo-tree-id239 . -29) (undo-tree-id240 . -29) (undo-tree-id241 . -29) (undo-tree-id242 . -29) (undo-tree-id243 . -29) (undo-tree-id244 . -29) (undo-tree-id245 . -29) (undo-tree-id246 . -29) (undo-tree-id247 . -29) (undo-tree-id248 . -29) (undo-tree-id249 . -29) (undo-tree-id250 . -29) (undo-tree-id251 . -29) (undo-tree-id252 . -30) (undo-tree-id253 . -30) (undo-tree-id254 . -29) (undo-tree-id255 . -28) (undo-tree-id256 . -29) (undo-tree-id257 . -28) 997) nil (24489 36131 603354 847000) 0 nil]) ((#("                             
" 0 21 (fontified t) 21 29 (fontified t) 29 30 (fontified t)) . 969) (undo-tree-id258 . -30) (undo-tree-id259 . -29) (undo-tree-id260 . -29) (undo-tree-id261 . -28) (undo-tree-id262 . -28) (undo-tree-id263 . -27) (undo-tree-id264 . -27) 996 (t 24489 36129 278576 856000)) nil (24489 36131 603456 263000) 0 nil]) ((#(" " 0 1 (fontified t)) . -968) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 969 (#("," 0 1 (fontified t)) . 969) (undo-tree-id81 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 969) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 969) (#(" " 0 1 (fontified t)) . 969) (#("," 0 1 (fontified t)) . 969) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 969) (#(" " 0 1 (fontified t)) . 969) (#("," 0 1 (fontified t)) . 969) (#("1" 0 1 (fontified t face highlight-numbers-number)) . 969)) nil (24489 36129 264508 794000) 0 nil]) ((#("[0, 0, 1]])" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face highlight-numbers-number) 2 4 (fontified t) 4 5 (fontified t face highlight-numbers-number) 5 7 (fontified t) 7 8 (fontified t face highlight-numbers-number) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t face (rainbow-delimiters-depth-2-face)) 10 11 (fontified t face (rainbow-delimiters-depth-1-face))) . 1038) (undo-tree-id82 . -11) (undo-tree-id83 . -11) (undo-tree-id84 . -11) (undo-tree-id85 . -11) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -6) (undo-tree-id103 . -5) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -9) (undo-tree-id109 . -8) (undo-tree-id110 . -10) (undo-tree-id111 . -10) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -10) (undo-tree-id115 . -11) (undo-tree-id116 . -10) (undo-tree-id117 . -11) (undo-tree-id118 . -10) (undo-tree-id119 . -11) (undo-tree-id120 . -10) (undo-tree-id121 . -11) (undo-tree-id122 . -10) (undo-tree-id123 . -11) (undo-tree-id124 . -10) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -10) (undo-tree-id131 . -11) (undo-tree-id132 . -10) (undo-tree-id133 . -11) (undo-tree-id134 . -10) (undo-tree-id135 . -11) (undo-tree-id136 . -10) (undo-tree-id137 . -11) (undo-tree-id138 . -10) (undo-tree-id139 . -11) (undo-tree-id140 . -10) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -10) (undo-tree-id145 . -11) (undo-tree-id146 . -10) (undo-tree-id147 . -11) (undo-tree-id148 . -10) (undo-tree-id149 . -11) (undo-tree-id150 . -10) (undo-tree-id151 . -11) (undo-tree-id152 . -10) (undo-tree-id153 . -11) (undo-tree-id154 . -10) (undo-tree-id155 . -11) (undo-tree-id156 . -10) (undo-tree-id157 . 1) (undo-tree-id158 . -11) (#("[0, 1, 0]," 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face highlight-numbers-number) 2 4 (fontified t) 4 5 (fontified t face highlight-numbers-number) 5 7 (fontified t) 7 8 (fontified t face highlight-numbers-number) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 10 (fontified t)) . 1008) (undo-tree-id159 . -10) (#("np.array([[" 0 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-1-face)) 9 10 (fontified t face (rainbow-delimiters-depth-2-face)) 10 11 (fontified t face (rainbow-delimiters-depth-3-face))) . 969) (undo-tree-id160 . -11) (undo-tree-id161 . -8) (undo-tree-id162 . -9) (undo-tree-id163 . -8) (undo-tree-id164 . -9) (undo-tree-id165 . -8) (undo-tree-id166 . -9) (undo-tree-id167 . 3) (undo-tree-id168 . -9) (undo-tree-id169 . 2) 1070 (t 24489 36102 67078 736000)) nil (24489 36129 265050 444000) 0 nil]) ((966 . 967) (965 . 967) (#("(" 0 1 (fontified nil)) . -965) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (958 . 966) (t 24489 35967 37226 412000)) nil (24489 36102 51091 615000) 0 nil]) ((7830 . 7831) (7829 . 7831) (#("(" 0 1 (fontified nil)) . -7829) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (7823 . 7830) (#("N" 0 1 (fontified t)) . -7823) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("o" 0 1 (fontified t)) . -7824) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("n" 0 1 (fontified t)) . -7825) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -7826) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 7827 (t 24481 58141 701546 89000)) nil (24489 35967 32575 77000) 0 nil]) nil nil (24489 35967 32612 74000) 0 nil] #1# 4219 12 nil)