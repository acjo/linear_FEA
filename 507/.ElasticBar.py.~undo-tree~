"e37571619ab85fd67a721f771442a6063679ef86"
#s(undo-tree [nil ([nil (#2=[nil nil ((#("
" 0 1 (fontified t)) . 1825) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . 1)) nil (24489 34702 915112 54000) 0 nil]) ((#("def compute_COC_spline_construction(le, re):
    '''When defining the spline basis for Omega_hat_F we first construct the bernstein basis, use the correct
       Extraction operator and then map it to the element in Omega_hat. [0,1] -> [le, re]
       Paramaters:
       (float) le, re: left and right endpoints
       Returns:
       (lambda) defining the change of basis
    '''
    return COC
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 35 (fontified t face font-lock-function-name-face) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 49 (fontified t) 49 50 (fontified t syntax-table #1=(15) face font-lock-doc-face) 50 155 (fontified t face font-lock-doc-face) 155 176 (fontified t face font-lock-doc-face) 176 245 (fontified t face font-lock-doc-face) 245 379 (fontified t face font-lock-doc-face) 379 380 (fontified t syntax-table #1# face font-lock-doc-face) 380 385 (fontified t) 385 391 (fontified t face font-lock-keyword-face) 391 396 (fontified t)) . 1825) (undo-tree-id16 . -395) (undo-tree-id17 . -395) (undo-tree-id18 . -381) (undo-tree-id19 . -396) (undo-tree-id20 . -49) (undo-tree-id21 . -49) (undo-tree-id22 . -49) (undo-tree-id23 . -49) (undo-tree-id24 . -380) (undo-tree-id25 . -49) (undo-tree-id26 . -44) (undo-tree-id27 . -44) (undo-tree-id28 . -49) (undo-tree-id29 . -49) (undo-tree-id30 . -49) (undo-tree-id31 . -49) (undo-tree-id32 . -380) (undo-tree-id33 . -49) (undo-tree-id34 . -44) (undo-tree-id35 . -44) (undo-tree-id36 . -155) (undo-tree-id37 . -176) (undo-tree-id38 . -396) (undo-tree-id39 . -396) (undo-tree-id40 . -396) (undo-tree-id41 . -396) (undo-tree-id42 . -396) (undo-tree-id43 . -396) (undo-tree-id44 . -396) (undo-tree-id45 . -396) (undo-tree-id46 . -396) (undo-tree-id47 . -396) (undo-tree-id48 . -396) (undo-tree-id49 . -396) (undo-tree-id50 . -396) (undo-tree-id51 . -396) (undo-tree-id52 . -396) (undo-tree-id53 . -396) (undo-tree-id54 . -396) (undo-tree-id55 . -396) (undo-tree-id56 . -396) (undo-tree-id57 . -396) (undo-tree-id58 . -396) (undo-tree-id59 . -396) (undo-tree-id60 . -396) (undo-tree-id61 . -396) (undo-tree-id62 . -396) (undo-tree-id63 . -396) (undo-tree-id64 . -396) (undo-tree-id65 . -396) (undo-tree-id66 . -396) (undo-tree-id67 . -396) (undo-tree-id68 . -396) (undo-tree-id69 . -396) (undo-tree-id70 . -396) (undo-tree-id71 . -396) (undo-tree-id72 . -396) (undo-tree-id73 . -396) (undo-tree-id74 . -396) (undo-tree-id75 . -396) (undo-tree-id76 . -396) (undo-tree-id77 . -396) (undo-tree-id78 . -396) (undo-tree-id79 . -396) (undo-tree-id80 . -396) (undo-tree-id81 . -396) (undo-tree-id82 . -396) (undo-tree-id83 . -396) (undo-tree-id84 . -396) (undo-tree-id85 . -396) (undo-tree-id86 . -396) (undo-tree-id87 . -396) (undo-tree-id88 . -396) (undo-tree-id89 . -396) (undo-tree-id90 . -396) (undo-tree-id91 . -396) (undo-tree-id92 . -396) (undo-tree-id93 . -396) (undo-tree-id94 . -394) (undo-tree-id95 . -396) (undo-tree-id96 . -396) (undo-tree-id97 . -379) (undo-tree-id98 . -394) (undo-tree-id99 . -381) (undo-tree-id100 . -371) (undo-tree-id101 . -379) (undo-tree-id102 . -373) (undo-tree-id103 . -326) (undo-tree-id104 . -371) (undo-tree-id105 . -328) (undo-tree-id106 . -310) (undo-tree-id107 . -326) (undo-tree-id108 . -312) (undo-tree-id109 . -262) (undo-tree-id110 . -310) (undo-tree-id111 . -264) (undo-tree-id112 . -218) (undo-tree-id113 . -262) (undo-tree-id114 . -245) (undo-tree-id115 . -108) (undo-tree-id116 . -218) (undo-tree-id117 . -155) (undo-tree-id118 . -43) (undo-tree-id119 . -108) (undo-tree-id120 . -45) (undo-tree-id121 . -43) (undo-tree-id122 . -43) (undo-tree-id123 . -108) (undo-tree-id124 . -43) (undo-tree-id125 . -218) (undo-tree-id126 . -108) (undo-tree-id127 . -262) (undo-tree-id128 . -218) (undo-tree-id129 . -310) (undo-tree-id130 . -262) (undo-tree-id131 . -326) (undo-tree-id132 . -310) (undo-tree-id133 . -371) (undo-tree-id134 . -326) (undo-tree-id135 . -379) (undo-tree-id136 . -371) (undo-tree-id137 . -394) (undo-tree-id138 . -379) (undo-tree-id139 . -396) (undo-tree-id140 . -394) (undo-tree-id141 . -396) (undo-tree-id142 . -155) (undo-tree-id143 . -155) (undo-tree-id144 . -155) (undo-tree-id145 . -155) (undo-tree-id146 . -155) (undo-tree-id147 . -155) (undo-tree-id148 . -155) (undo-tree-id149 . -155) (undo-tree-id150 . -155) (undo-tree-id151 . -155) (undo-tree-id152 . -155) (undo-tree-id153 . -155) (undo-tree-id154 . -155) (undo-tree-id155 . -155) (undo-tree-id156 . -155) (undo-tree-id157 . -155) (undo-tree-id158 . -155) (undo-tree-id159 . -155) (undo-tree-id160 . -155) (undo-tree-id161 . -155) (undo-tree-id162 . -155) (undo-tree-id163 . -155) (undo-tree-id164 . -155) (undo-tree-id165 . -155) (undo-tree-id166 . -155) (undo-tree-id167 . -155) (undo-tree-id168 . -155) (undo-tree-id169 . -155) (undo-tree-id170 . -155) (undo-tree-id171 . -155) (undo-tree-id172 . -155) (undo-tree-id173 . -155) (undo-tree-id174 . -155) (undo-tree-id175 . -155) (undo-tree-id176 . -155) (undo-tree-id177 . -155) (undo-tree-id178 . -155) (undo-tree-id179 . -155) (undo-tree-id180 . -155) (undo-tree-id181 . -155) (undo-tree-id182 . -155) (undo-tree-id183 . -155) (undo-tree-id184 . -155) (undo-tree-id185 . -155) (undo-tree-id186 . -155) (undo-tree-id187 . -155) (undo-tree-id188 . -155) (undo-tree-id189 . -155) (undo-tree-id190 . -396) (undo-tree-id191 . -155) (undo-tree-id192 . -394) (undo-tree-id193 . -396) (undo-tree-id194 . -155) (undo-tree-id195 . -379) (undo-tree-id196 . -394) (undo-tree-id197 . -155) (undo-tree-id198 . -371) (undo-tree-id199 . -379) (undo-tree-id200 . -155) (undo-tree-id201 . -326) (undo-tree-id202 . -371) (undo-tree-id203 . -155) (undo-tree-id204 . -310) (undo-tree-id205 . -326) (undo-tree-id206 . -155) (undo-tree-id207 . -262) (undo-tree-id208 . -310) (undo-tree-id209 . -155) (undo-tree-id210 . -218) (undo-tree-id211 . -262) (undo-tree-id212 . -155) (undo-tree-id213 . -108) (undo-tree-id214 . -218) (undo-tree-id215 . -155) (undo-tree-id216 . -43) (undo-tree-id217 . -108) (undo-tree-id218 . -45) (undo-tree-id219 . -43) (undo-tree-id220 . -43) (undo-tree-id221 . -42) (undo-tree-id222 . -43) (undo-tree-id223 . -42) (undo-tree-id224 . -43) (undo-tree-id225 . -42) (undo-tree-id226 . -43) (undo-tree-id227 . -42) (undo-tree-id228 . -43) (undo-tree-id229 . -42) (undo-tree-id230 . -43) (undo-tree-id231 . -42) (undo-tree-id232 . -43) (undo-tree-id233 . -35) (undo-tree-id234 . -36) (undo-tree-id235 . -43) (undo-tree-id236 . -395) (undo-tree-id237 . -396) (undo-tree-id238 . -43) (undo-tree-id239 . -43) (undo-tree-id240 . -43) (undo-tree-id241 . -395) (undo-tree-id242 . -88) (undo-tree-id243 . -43) (undo-tree-id244 . -198) (undo-tree-id245 . -88) (undo-tree-id246 . -263) (undo-tree-id247 . -198) (undo-tree-id248 . -307) (undo-tree-id249 . -263) (undo-tree-id250 . -327) (undo-tree-id251 . -307) (undo-tree-id252 . -371) (undo-tree-id253 . -327) (undo-tree-id254 . -380) (undo-tree-id255 . -371) (undo-tree-id256 . -395) (undo-tree-id257 . -380) 2220 (t 24485 39025 314997 202000)) nil (24489 34702 916831 12000) 0 nil]) nil nil (24489 34702 916879 786000) 0 nil] #2# 2493 2 nil)